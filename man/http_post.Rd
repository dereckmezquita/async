% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/http.R
\name{http_post}
\alias{http_post}
\title{Asynchronous HTTP POST request}
\usage{
http_post(
  url,
  data = NULL,
  data_file = NULL,
  data_form = NULL,
  headers = character(),
  file = NULL,
  options = list(),
  on_progress = NULL
)
}
\arguments{
\item{url}{URL to connect to.}

\item{data}{Data to send. Either a raw vector, or a character string
that will be converted to raw with \link[base:rawConversion]{base::charToRaw}. At most one of
\code{data}, \code{data_file} and \code{data_form} can be non \code{NULL}.}

\item{data_file}{Data file to send. At most one of \code{data}, \code{data_file}
and \code{data_form} can be non \code{NULL}.}

\item{data_form}{Form data to send. A name list, where each element
is created with either \code{\link[curl:multipart]{curl::form_data()}} or \code{\link[curl:multipart]{curl::form_file()}}.
At most one of \code{data}, \code{data_file} and \code{data_form} can be non \code{NULL}.}

\item{headers}{HTTP headers to send.}

\item{file}{If not \code{NULL}, it must be a string, specifying a file.
The body of the response is written to this file.}

\item{options}{Options to set on the handle. Passed to
\code{\link[curl:handle]{curl::handle_setopt()}}.}

\item{on_progress}{Progress handler function. It is only used if the
response body is written to a file. See details at \code{\link[=http_get]{http_get()}}.}
}
\description{
Start an HTTP POST request in the background, and report its completion
via a deferred value.
}
\details{
An async HTTP deferred object is also an event emitter, see
\code{\link[=http_get]{http_get()}} for details, and also \link{event_emitter}.
}
\examples{
json <- jsonlite::toJSON(list(baz = 100, foo = "bar"))

do <- function() {
  headers <- c("content-type" = "application/json")
  http_post("https://eu.httpbin.org/post", data = json, headers = headers)$
    then(http_stop_for_status)$
    then(function(x) {
      jsonlite::fromJSON(rawToChar(x$content))$json
    })
}

synchronise(do())
}
